package org.example;

import reactor.core.publisher.Flux;
import java.time.Duration;
import java.util.List;
import java.util.Arrays;

public class OperadoresReactorDemo {

    public static void main(String[] args) throws InterruptedException {

        // Ejemplo 1Ô∏è‚É£: Notificaciones en Universidad
        List<Usuario> usuarios = Arrays.asList(
                new Usuario("Ana", "Estudiante", "ana@uni.edu"),
                new Usuario("Carlos", "Profesor", "carlos@uni.edu"),
                new Usuario("Luisa", "Estudiante", "luisa@uni.edu"),
                new Usuario("Sof√≠a", "Administrativo", "sofia@uni.edu")
        );


        Flux.fromIterable(usuarios)
                .filter(u -> u.getRol().equalsIgnoreCase("Estudiante")) // üîç Filtra estudiantes
                .map(u -> "üì¢ Notificaci√≥n para: " + u.getNombre())     // üîÑ Transforma en mensaje
                .delayElements(Duration.ofMillis(500))
                .subscribe(m -> System.out.println("‚úÖ Universidad: " + m));

        // Ejemplo 2Ô∏è‚É£: Confirmaci√≥n de entregas (log√≠stica)
        Flux.just("Pedido 1", "Pedido 2", "Pedido 3")
                .flatMap(pedido -> simularEntrega(pedido)) // üîÅ Cada pedido genera otro flujo (simula proceso as√≠ncrono)
                .subscribe(m -> System.out.println("üöö Log√≠stica: " + m));

        // Ejemplo 3Ô∏è‚É£: Alertas de sensores
        Flux.just(18, 22, 35, 45) // üî¢ Temperaturas de sensores
                .filter(temp -> temp > 30) // üîç Filtra temperaturas altas
                .map(temp -> "‚ö†Ô∏è Alerta: Temperatura alta: " + temp + "¬∞C")
                .subscribe(System.out::println);

        Thread.sleep(4000); // Esperar finalizaci√≥n
    }

    // üîß Simula proceso as√≠ncrono para confirmaci√≥n de entrega
    private static Flux<String> simularEntrega(String pedido) {
        return Flux.just(pedido + " confirmado")
                .delayElements(Duration.ofMillis(700));
    }

    // Clase auxiliar
    static class Usuario {
        private final String nombre;
        private final String rol;
        private final String correo;

        public Usuario(String nombre, String rol, String correo) {
            this.nombre = nombre;
            this.rol = rol;
            this.correo = correo;
        }

        public String getNombre() { return nombre; }
        public String getRol() { return rol; }
    }
}
